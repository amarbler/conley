// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// vecdist
double vecdist(NumericVector a, NumericVector b);
RcppExport SEXP _conley_vecdist(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(vecdist(a, b));
    return rcpp_result_gen;
END_RCPP
}
// XeeXhC
arma::mat XeeXhC(arma::mat M, double cutoff, arma::mat X, arma::vec e, int n1, int k, std::string kernel, std::string dist_fn);
RcppExport SEXP _conley_XeeXhC(SEXP MSEXP, SEXP cutoffSEXP, SEXP XSEXP, SEXP eSEXP, SEXP n1SEXP, SEXP kSEXP, SEXP kernelSEXP, SEXP dist_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string >::type dist_fn(dist_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(XeeXhC(M, cutoff, X, e, n1, k, kernel, dist_fn));
    return rcpp_result_gen;
END_RCPP
}
// Bal_XeeXhC
arma::mat Bal_XeeXhC(arma::mat dmat, arma::mat X, arma::vec e, int n1, int k);
RcppExport SEXP _conley_Bal_XeeXhC(SEXP dmatSEXP, SEXP XSEXP, SEXP eSEXP, SEXP n1SEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(Bal_XeeXhC(dmat, X, e, n1, k));
    return rcpp_result_gen;
END_RCPP
}
// XeeXhC_Lg
arma::mat XeeXhC_Lg(arma::mat& M, double& cutoff, arma::mat& X, arma::vec& e, int& n1, int& k, std::string& kernel, std::string& dist_fn);
RcppExport SEXP _conley_XeeXhC_Lg(SEXP MSEXP, SEXP cutoffSEXP, SEXP XSEXP, SEXP eSEXP, SEXP n1SEXP, SEXP kSEXP, SEXP kernelSEXP, SEXP dist_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< double& >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type e(eSEXP);
    Rcpp::traits::input_parameter< int& >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int& >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::string& >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string& >::type dist_fn(dist_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(XeeXhC_Lg(M, cutoff, X, e, n1, k, kernel, dist_fn));
    return rcpp_result_gen;
END_RCPP
}
// TimeDist
arma::mat TimeDist(arma::vec times, double cutoff, arma::mat X, arma::vec e, int n1, int k);
RcppExport SEXP _conley_TimeDist(SEXP timesSEXP, SEXP cutoffSEXP, SEXP XSEXP, SEXP eSEXP, SEXP n1SEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(TimeDist(times, cutoff, X, e, n1, k));
    return rcpp_result_gen;
END_RCPP
}
// DistMat
arma::mat DistMat(arma::mat M, double cutoff, std::string kernel, std::string dist_fn);
RcppExport SEXP _conley_DistMat(SEXP MSEXP, SEXP cutoffSEXP, SEXP kernelSEXP, SEXP dist_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string >::type dist_fn(dist_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(DistMat(M, cutoff, kernel, dist_fn));
    return rcpp_result_gen;
END_RCPP
}
// DistMatPar
arma::mat DistMatPar(arma::mat& mat, double& cutoff, std::string kernel, std::string dist_fn);
RcppExport SEXP _conley_DistMatPar(SEXP matSEXP, SEXP cutoffSEXP, SEXP kernelSEXP, SEXP dist_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< double& >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string >::type dist_fn(dist_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(DistMatPar(mat, cutoff, kernel, dist_fn));
    return rcpp_result_gen;
END_RCPP
}
// XeeXhC_Lg_Par
arma::mat XeeXhC_Lg_Par(arma::mat& mat, double& cutoff, arma::mat& X, arma::vec& e, std::string kernel, std::string dist_fn);
RcppExport SEXP _conley_XeeXhC_Lg_Par(SEXP matSEXP, SEXP cutoffSEXP, SEXP XSEXP, SEXP eSEXP, SEXP kernelSEXP, SEXP dist_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< double& >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type e(eSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string >::type dist_fn(dist_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(XeeXhC_Lg_Par(mat, cutoff, X, e, kernel, dist_fn));
    return rcpp_result_gen;
END_RCPP
}
// Bal_XeeXhC_Par
arma::mat Bal_XeeXhC_Par(arma::mat& dmat, arma::mat& X, arma::vec& e);
RcppExport SEXP _conley_Bal_XeeXhC_Par(SEXP dmatSEXP, SEXP XSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(Bal_XeeXhC_Par(dmat, X, e));
    return rcpp_result_gen;
END_RCPP
}
// XeeXhC_Par
arma::mat XeeXhC_Par(arma::mat& mat, double& cutoff, arma::mat& X, arma::vec& e, std::string& kernel, std::string& dist_fn);
RcppExport SEXP _conley_XeeXhC_Par(SEXP matSEXP, SEXP cutoffSEXP, SEXP XSEXP, SEXP eSEXP, SEXP kernelSEXP, SEXP dist_fnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< double& >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type e(eSEXP);
    Rcpp::traits::input_parameter< std::string& >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< std::string& >::type dist_fn(dist_fnSEXP);
    rcpp_result_gen = Rcpp::wrap(XeeXhC_Par(mat, cutoff, X, e, kernel, dist_fn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_conley_vecdist", (DL_FUNC) &_conley_vecdist, 2},
    {"_conley_XeeXhC", (DL_FUNC) &_conley_XeeXhC, 8},
    {"_conley_Bal_XeeXhC", (DL_FUNC) &_conley_Bal_XeeXhC, 5},
    {"_conley_XeeXhC_Lg", (DL_FUNC) &_conley_XeeXhC_Lg, 8},
    {"_conley_TimeDist", (DL_FUNC) &_conley_TimeDist, 6},
    {"_conley_DistMat", (DL_FUNC) &_conley_DistMat, 4},
    {"_conley_DistMatPar", (DL_FUNC) &_conley_DistMatPar, 4},
    {"_conley_XeeXhC_Lg_Par", (DL_FUNC) &_conley_XeeXhC_Lg_Par, 6},
    {"_conley_Bal_XeeXhC_Par", (DL_FUNC) &_conley_Bal_XeeXhC_Par, 3},
    {"_conley_XeeXhC_Par", (DL_FUNC) &_conley_XeeXhC_Par, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_conley(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
